name: CI

on:
  push:
    branches:
      - master
  repository_dispatch:
    types: [semantic-release]

jobs:
  job-checkout-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v1
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Install NR1 CLI
        run: curl -s https://cli.nr-ext.net/installer.sh | sudo bash

      - name: NR1 Nerdpack Build
        run: |
          nr1 nerdpack:build
          nr1 nerdpack:validate

  # job-test # needed??
  job-generate-third-party-notices:
    runs-on: ubuntu-latest
    needs: job-checkout-and-build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Download Cached Deps
        id: cache-node-modules
        uses: actions/cache@v1
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install Dependencies
        run: npm ci

      - name: Install OSS CLI
        run: |
          sudo npm install -g @newrelic/newrelic-oss-cli

      # - add_ssh_keys:
      #     fingerprints:
      #       - *deploy-key-fingerprint

      - name: Generate Third Party Notices
        run: |
          # latest commit
          LATEST_COMMIT=$(git rev-parse HEAD)

          # latest commit where package.json was changed
          LAST_CHANGED_COMMIT=$(git log -1 --format=format:%H --full-diff package.json)

          #TODO: use correct branch/settings for commiting files back
          if [ $LAST_CHANGED_COMMIT = $LATEST_COMMIT ]; then
            # git config user.email "${THIRD_PARTY_GIT_AUTHOR_EMAIL}"
            # git config user.name "${THIRD_PARTY_GIT_AUTHOR_NAME}"

            oss third-party manifest
            oss third-party notices

            # git add third_party_manifest.json
            # git add THIRD_PARTY_NOTICES.md

            # git commit -m 'chore: update third-party manifest and notices [skip ci]'
            # git push origin ${CIRCLE_BRANCH} 

          else
            echo "No change in package.json, not regenerating third-party notices"
          fi

  job-generate-release:
    runs-on: ubuntu-latest
    needs: job-checkout-and-build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Download Cached Deps
        id: cache-node-modules
        uses: actions/cache@v1
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
